<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[The Tipter Blog]]></title>
  <link href="http://tipter.github.com/atom.xml" rel="self"/>
  <link href="http://tipter.github.com/"/>
  <updated>2013-06-16T15:06:56+03:00</updated>
  <id>http://tipter.github.com/</id>
  <author>
    <name><![CDATA[The Tipter Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Autocomplete with Elasticsearch and Tire]]></title>
    <link href="http://tipter.github.com/blog/2013/06/16/autocomplete-with-elasticsearch-and-tire/"/>
    <updated>2013-06-16T14:09:00+03:00</updated>
    <id>http://tipter.github.com/blog/2013/06/16/autocomplete-with-elasticsearch-and-tire</id>
    <content type="html"><![CDATA[<p>We’ve recently seen a need to introduce an autocomplete feature to <a href="http://tipter.com">Tipter</a>. <a href="http://tipter.com">Tipter</a>
allows its users to search for Trips (a.k.a Travel Blogs) and Tips (the building blocks of Trips). I’ve spent couple of days on this feature, integrating multiple resources until I got the desired result.</p>

<p>This list of resources includes: <a href="http://jontai.me/blog/2013/02/adding-autocomplete-to-an-elasticsearch-search-application/">this great blog post</a>, which refers to an excellent Stack Overflow <a href="http://stackoverflow.com/questions/9421358/filename-search-with-elasticsearch/9432450#9432450">answer</a>, and this <a href="https://github.com/karmi/tire/issues/101">issue</a> on github which explains how to use multifield in Tire. It also includes this <a href="http://masonoise.wordpress.com/2012/08/11/elasticsearch-with-rails-and-tire/">blog post</a>
which I only found at later stages, definitely could have saved me some time. And of course <a href="http://www.elasticsearch.org/guide/">Elasticsearch</a> guide, <a href="https://github.com/karmi/tire">Tire</a> documentation, and <a href="http://railscasts.com/episodes/306-elasticsearch-part-1">Railscast</a>.</p>

<p>Let’s start by looking at some code. I’ve listed the relevant code snippets of our trip model. Each trip <code>has_many</code> countries which <code>has_one</code> sovereign model that hold the country’s name. Our target (for this post at least…) is to be able to perform autocomplete on the country name, and offer the user relevant travel blogs that include that country.</p>

<pre><code>class Trip &lt; ActiveRecord::Base
  has_many :countries, dependent: :destroy

  def countries_names
    sovereign_names = self.countries.map { |c| c.sovereign.nil? ? "" : c.sovereign.name }.join(", ")
    sovereign_names
  end


  include Tire::Model::Search
  include Tire::Model::Callbacks

  settings :analysis =&gt; { 
             :filter =&gt; {
               :trip_ngram  =&gt; {
                 "type"     =&gt; "edgeNGram",
                 "max_gram" =&gt; 15,
                 "min_gram" =&gt; 2 }
             },
             :analyzer =&gt; {
               :index_ngram_analyzer =&gt; {
                 "type" =&gt; "custom",
                 "tokenizer" =&gt; "standard",
                 "filter" =&gt; [ "standard", "lowercase", "trip_ngram" ] 
               }, 
               :search_ngram_analyzer =&gt; {
                 "type" =&gt; "custom",
                 "tokenizer" =&gt; "standard",
                 "filter" =&gt; [ "standard", "lowercase"] 
               }, 
             }     
          } 


  mapping do 
   indexes :countries_names, :type =&gt; 'multi_field', :fields =&gt; {
      :countries_names =&gt; { :type =&gt; "string"},
      :"countries_names.autocomplete" =&gt; { :search_analyzer =&gt; "search_ngram_analyzer", :index_analyzer =&gt; "index_ngram_analyzer", :type =&gt; "string"}
   }
  end

  def to_indexed_json 
    to_json(methods: [:countries_names])
  end

  def self.regular_search(params) 
    tire.search(load: true) do
       query {string 'countries_names:' + params }
    end
  end


  def self.autocomplete(params) 
    tire.search(load: true) do
       query {string 'countries_names.autocomplete:' + params }
    end
  end
</code></pre>

<p>So, for a start we&#8217;ll index the <code>countries_names</code> using the <code>mapping</code> block code. We will use the Elasticsearch <code>multi_field</code> type to define &#8220;regular&#8221; <code>countries_names</code> search, and autocomplete one.
This will allow us to declare two different methods able to be used based on our needs. For the <code>countries_names:autocomplete</code> variant, we declare two types of analyzers <code>:search_analyzer</code> and <code>:index_analyzer</code>.</p>

<p>A great overview of analyzers&#8217; structure and how they work in Elasticsearch can be found <a href="http://jontai.me/blog/2013/02/adding-autocomplete-to-an-elasticsearch-search-application/">here</a>, and I don&#8217;t want to repeat that (and probably introduce errors&#8230; :-) ). However, some of the modifications I did were to use Edge NGram token filter so that n-grams will only be generated from the beginning of the word.</p>

<p>In addition I used different filters for search and indexing where the search filter doesn’t use the Edge NGram filter.</p>

<p>My initial version of the mapping used a single analyzer:</p>

<pre><code> mapping do 
   indexes :countries_names, :type =&gt; 'multi_field', :fields =&gt; {
      :countries_names =&gt; { :type =&gt; "string"},
      :"countries_names.autocomplete" =&gt; { :analyzer =&gt; "index_ngram_analyzer", :type =&gt; "string"}
   }
 end
</code></pre>

<p>While playing with several search queries on the console, I ran this query:</p>

<pre><code>1.9.3-p327 :159 &gt; Trip.autocomplete("mar").map { |t| t.countries_names }
 ....
 =&gt; ["Malaysia", "Malaysia"] 
</code></pre>

<p>The reason it found Malaysia is because of the index containing the following tokens:</p>

<p>[ma], [mal], [mala], [malay], [malays], [malaysi], [malaysia]</p>

<p>Notice I used <code>min_gram</code> of two in order to reduces false positives. Using the same token filter, the search query translates to:</p>

<p>[ma], [mar]</p>

<p>So there&#8217;s a match on the &#8220;ma&#8221;. This can be avoided by using different search analyzer as in the first code snippet. Running the same query gets the expected result:</p>

<pre><code>1.9.3-p327 :163 &gt; Trip.autocomplete("mar").map { |t| t.countries_names }
 =&gt; [] 

1.9.3-p327 :164 &gt; Trip.autocomplete("ma").map { |t| t.countries_names }
 ...
 =&gt; ["Malaysia", "Malaysia"] 

1.9.3-p327 :167 &gt; Trip.regular_search("ma").map { |t| t.countries_names }
=&gt; [] 
</code></pre>

<p>There you go. I hope this will save some of you the time I spent on wiring everything together.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Travel Blogging made simpler with Tipter’s blogging interface]]></title>
    <link href="http://tipter.github.com/blog/2013/06/02/blogging-made-simpler/"/>
    <updated>2013-06-02T14:58:00+03:00</updated>
    <id>http://tipter.github.com/blog/2013/06/02/blogging-made-simpler</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://tipter.github.com/images/chopy.jpg" width="420" height="320" title="image" alt="images"></p>

<p><a href="http://tipter.com">Tipter</a>’s blogging interface is one of the features we like most about the app, and we want to tell you what makes it so special.
You are probably familiar with today’s popular blogging systems. Many of them are built on WordPress or a similar software. We have no problem with WordPress, but we believe that it has some flaws that hurt the functionality of your blog. For instance, we aren’t a fan of the “Preview” button. We believe that, when you edit your blog, you should be able to see the content change in real time. Why should you have to guess how your blog is going to look before you publish it? Why should you have to troubleshoot issues, because you can’t edit your page and see the final product at the same time?</p>

<p>We don’t know the answer to these questions, so we decided to simplify the process for you.</p>

<p>With <a href="http://tipter.com">Tipter</a>, you don’t have to guess. Your text will look exactly as it did on the edit screen – mainly because you edit and publish in the same window. Just open a new tip, write a recommendation or share a story, and click outside the tip’s window. <a href="http://tipter.com">Tipter</a> will save your text automatically, and it will look exactly as it did when editing. Want to add, change, or delete something? No problem at all. Just click on the tip itself and the edit bar will appear on the top of the window. Edit to your heart’s desire, click outside the window, and your tip is automatically updated.</p>

<p><img src="http://tipter.github.com/images/blog2_edit.png" title="'Tip edit'" ></p>

<p>And of course, you can add a picture with the photo button use bold, italic or underline fonts, make a list, align the text left, right, or to the middle, and use any of the other features on the edit bar. You can also choose a subject for the tip – food, sightseeing, camping, nightlife, and many other options.</p>

<p><img src="http://tipter.github.com/images/blog2_tt.png" title="'Tip type selection'" ></p>

<p>Choosing a subject for your tip will help other users look for it and help you get some Karma on the site’s rating system. But, that’s a matter for the next post on <a href="http://tipter.com">Tipter</a>’s blog.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Does the world really need another travel web app?]]></title>
    <link href="http://tipter.github.com/blog/2013/05/21/does-the-world-need-another-travel-web-app/"/>
    <updated>2013-05-21T10:01:00+03:00</updated>
    <id>http://tipter.github.com/blog/2013/05/21/does-the-world-need-another-travel-web-app</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://tipter.github.com/images/pileofpaper.jpg" width="400" height="400" title="image" alt="images"></p>

<p>We think so! Have you ever begun planning a trip and felt helpless and overwhelmed by all of the information on the internet? Did you wish you could just get advice from people you knew you could trust? We always feel this way while planning, which is why we came up with a solution: <a href="http://tipter.com">Tipter</a>.</p>

<p>There are so many constraints involved when planning a trip: time, budget, season, age of your traveling companions, and countless others. Planning always takes time, can often be painful, and normally results in compromises and disappointment unless you’ve got unlimited budget, all the time in the world, and you are travelling with your identical twin. As for rest of us, we could use a little help.</p>

<p>You can always buy a travel guide, like in the good old days before the internet. You can utilize search engines and hope that you are asking the right questions to get the best information. But will you really figure out where to go when you travel to the south of France for three weeks, or what to do with two kids in Thailand? Probably not.</p>

<p>By analyzing our travel planning experience, we believe we have pinpointed the problem.
Most online sources are focused on the specifics: flights, hotels, and restaurants. However, when you are starting to plan a trip, you are looking for information about the big picture. Finding a hotel or a good restaurant is the easy part. Finding the best route to take, most scenic viewpoint to look at, and the best time of day to find the shortest line at a landmark, however, is much harder. What you need is the combined wisdom of other travelers like you, who have been there and done that, and can tell you all about it.</p>

<p>How does <a href="http://tipter.com">Tipter</a> help you solve this problem?</p>

<p><a href="http://tipter.com">Tipter</a> is a sophisticated social network of travelers like you. They share their experience, traveling tips, and itineraries. <a href="http://tipter.com">Tipter</a> contains information from people who have visited where you want to go and therefore have gained the invaluable experience that can help you plan your trip. Their information can help you know where to go, what to pack, when to go, and how much time to allot for each location. You will be able to find great local restaurants, viewpoints, places to hang out, and much more. You will be able to sort through information and figure out where you want to spend your time, and where you don’t want to waste it. <a href="http://tipter.com">Tipter</a> takes the tedious and time consuming process of trip planning and turns it into a fun, easy, and social experience.</p>

<p>When you return from your trip, you come back with great memories, tips, and recommendations. <a href="http://tipter.com">Tipter</a> makes sharing this experience easier than ever. While on the road, you can blog your trip so that you can let people know what you are doing anywhere in the world. When you return from your trip, you can share the “inside knowledge” that you have gained with friends and family, the people that helped you plan the trip, and the whole world! Your tips will set in motion a cycle – others will use your information to plan their own trips, then they will give their own insight. The final product is an up-to-date, informative, and trust-worthy travel guide for the 21st century.</p>

<p>So yes, we do think the world needs another travel web app, because the right one just isn’t out there… yet. Currently, your options are limited to too much information from people you can’t trust, too many advertisements, and not enough information tailored to your needs. We have devoted the last year to building and improving <a href="http://tipter.com">Tipter</a>, so that it can fulfill your needs. Today, we are ecstatic to let you know that our idea has become a reality. We still have a long way to go and have many ideas we have yet to implement for <a href="http://tipter.com">Tipter</a>, but we’ll get there with your help. We have invested a lot of thinking into this application and are confident that we can solve the problems that come with planning a trip, for ourselves and for you. Come aboard and give <a href="http://tipter.com">Tipter</a> a go, because it was made with you in mind.</p>
]]></content>
  </entry>
  
</feed>
